import re
import sqlite3
import sys
import locale
import unicodedata

# Connect to the SQLite database
conn = sqlite3.connect('pol_lab07.s3db')
curs = conn.cursor()

# Function to check if a table exists
def table_exists(curs, table_name):
    curs.execute(f"SELECT name FROM sqlite_master WHERE type='table' AND name='{table_name}';")
    return curs.fetchone() is not None

# Create the table if it doesn't exist
if not table_exists(curs, 'tnoun'):
    curs.execute('''CREATE TABLE tnoun (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        sgN TEXT,
                        plL TEXT,
                        gender TEXT,
                        sgG TEXT,
                        sgD TEXT,
                        sgA TEXT,
                        sgI TEXT,
                        sgL TEXT,
                        sgV TEXT
                    );''')
    conn.commit()

# Знайти будь-яке одне слово в початковій формі
curs.execute("SELECT sgN FROM tnoun WHERE sgN='sens'")
result = curs.fetchone()
if result:
    print(result[0])
else:
    print("No results found")

# Вивести в консоль через кому всі слова, які починаються на задану літеру + відмінок
curs.execute("SELECT sgN FROM tnoun WHERE plL LIKE 's_%'")
words = [unicodedata.normalize('NFC', word[0]) for word in curs.fetchall()]
print(", ".join(words))

# додати до БД нове слово + рід
gender = "2"
nw = "prawda"
curs.execute(f"INSERT INTO tnoun (gender, sgN) VALUES(?, ?)", (gender, nw))
conn.commit()

curs.execute("SELECT sgN, gender FROM tnoun ORDER BY id DESC LIMIT 1")
print(curs.fetchone())

# Function to parse lemmas
def parse(lemma):
    pattern1 = re.compile(f"(?P<word>\\w*)\\t{lemma}\\t(?P<tags>.+)")
    pattern2 = re.compile("(?<=sg:)[\\w\\.]+(?=:)")
    with open("parse_lab07.txt", "r", encoding="utf-8") as h:
        lines = h.readlines()

    valid = []
    for line in lines:
        check = re.match(pattern1, line)
        if check:
            valid.append(check.group("word", "tags"))

    sgN, sgG, sgD, sgA, sgI, sgL, sgV = (None,) * 7  # Initialize all variables
    for line in valid:
        for match in re.finditer(pattern2, line[1]):
            if match.group(0) == "nom":
                sgN = line[0]
            elif match.group(0) == "gen":
                sgG = line[0]
            elif match.group(0) == "dat":
                sgD = line[0]
            elif match.group(0) == "acc":
                sgA = line[0]
            elif match.group(0) == "inst":
                sgI = line[0]
            elif match.group(0) == "loc":
                sgL = line[0]
            elif match.group(0) == "voc":
                sgV = line[0]

    return [sgN, sgG, sgD, sgA, sgI, sgL, sgV]

forms = parse(nw)
column_list = ["N", "G", "D", "A", "I", "L", "V"]

for i, column in enumerate(column_list):
    curs.execute(f"UPDATE tnoun SET sg{column}=? WHERE sgN = ?", (forms[i], nw))

curs.execute("SELECT * FROM tnoun ORDER BY id DESC LIMIT 1")
print(curs.fetchone())
conn.commit()

# Close the connection
conn.close()
